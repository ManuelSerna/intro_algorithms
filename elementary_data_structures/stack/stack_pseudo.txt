//***********************************************
 Stack pseudo code.
//***********************************************

/*
In a stack, the element deleted from the set is the one most recently inserted: the stack implements a last-in, first-out, or LIFO, policy.

We can implement a stack of at most n elements with an array S[1...n]. The array has an attribute S.top that indexes the most recently inserted element. When S.top = 0, the stack contains no elements ans is empty. If we attempt to pop an empty stack, we say the stack underflows, which is normally an error. If S.top exceeds n, the stack overflows.
*/

//-----------------------------------------------
 Check if the stack is empty.
//-----------------------------------------------
STACK_EMPTY(S)
    if S.top == 0
        return TRUE
    else
        return FALSE

//-----------------------------------------------
 Push an element x to the stack.
//-----------------------------------------------
PUSH(S, x)
    S.top = S.top + 1
    S[S.top] = x

//-----------------------------------------------
 Pop an element from the stack.
//-----------------------------------------------
POP(S)
    if STACK_EMPTY(S)
        error "underflow"
    else
        S.top = S.top - 1
        return S[S.top + 1]
